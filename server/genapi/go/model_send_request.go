/*
 * Async Output Service API
 *
 * An API for real-time matching of asynchronous output generation with client consumption.  The service acts as a matching intermediary between applications generating outputs  asynchronously and clients waiting to receive specific outputs in real-time.  **Core Concept**: Stream-based matching using streamID to connect senders with receivers.  **Phase 1**: Real-time in-memory matching with long polling **Phase 2**: Persistent storage with replay capability
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package genapi

type SendRequest struct {

	// Unique identifier for the output
	OutputUuid string `json:"outputUuid"`

	// Unique identifier for the output stream
	StreamId string `json:"streamId"`

	// The size of the in-memory stream. Only used when writeToDB is false. Default is 100. Only applicable when the stream is empty. The stream will be a circular buffer by default, meaning the oldest output will be deleted when the stream is full. But if using blockingWriteTimeoutSeconds, the stream will not delete the oldest output when the stream is full. In certain cases, setting this to zero, and using blockingWriteTimeoutSeconds, will make the stream behave like a sync match queue(no data loss but requires client to retry to wait for the stream to be available to write to).
	InMemoryStreamSize int32 `json:"inMemoryStreamSize,omitempty"`

	// The timeout in seconds for waiting for the in-memory stream to be available to write to. Using this means the stream is not a circular buffer(not delete the oldest output when the stream is full). It will return 424 error if the stream is full after waiting. Using this with inMemoryStreamSize set to zero will make the stream behave like a sync match queue(no data loss but requires client to retry to wait for the stream to be available to write to).
	BlockingWriteTimeoutSeconds int32 `json:"blockingWriteTimeoutSeconds,omitempty"`

	// The output data to send as JSON object
	Output map[string]interface{} `json:"output"`

	// Whether to write to the database. By default, this is false.
	WriteToDB bool `json:"writeToDB,omitempty"`

	// The TTL in seconds for the output in the database. Only used when writeToDB is true. Default is 24 * 60 * 60 (24 hours).
	DbTTLSeconds int32 `json:"dbTTLSeconds,omitempty"`
}
