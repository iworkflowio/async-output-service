/*
Async Output Service API

An API for real-time matching of asynchronous output generation with client consumption.  The service acts as a matching intermediary between applications generating outputs  asynchronously and clients waiting to receive specific outputs in real-time.  **Core Concept**: Stream-based matching using streamID to connect senders with receivers.  **Phase 1**: Real-time in-memory matching with long polling **Phase 2**: Persistent storage with replay capability

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package genapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ReceiveResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReceiveResponse{}

// ReceiveResponse struct for ReceiveResponse
type ReceiveResponse struct {
	// Unique identifier for the output
	OutputUuid *string `json:"outputUuid,omitempty"`
	// The received output data as JSON object
	Output map[string]interface{} `json:"output"`
	// When the output was generated
	Timestamp time.Time `json:"timestamp"`
	// Token for resuming from next position, only applicable when writeToDB is true.
	DbResumeToken *string `json:"dbResumeToken,omitempty"`
}

type _ReceiveResponse ReceiveResponse

// NewReceiveResponse instantiates a new ReceiveResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReceiveResponse(output map[string]interface{}, timestamp time.Time) *ReceiveResponse {
	this := ReceiveResponse{}
	this.Output = output
	this.Timestamp = timestamp
	return &this
}

// NewReceiveResponseWithDefaults instantiates a new ReceiveResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReceiveResponseWithDefaults() *ReceiveResponse {
	this := ReceiveResponse{}
	return &this
}

// GetOutputUuid returns the OutputUuid field value if set, zero value otherwise.
func (o *ReceiveResponse) GetOutputUuid() string {
	if o == nil || IsNil(o.OutputUuid) {
		var ret string
		return ret
	}
	return *o.OutputUuid
}

// GetOutputUuidOk returns a tuple with the OutputUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReceiveResponse) GetOutputUuidOk() (*string, bool) {
	if o == nil || IsNil(o.OutputUuid) {
		return nil, false
	}
	return o.OutputUuid, true
}

// HasOutputUuid returns a boolean if a field has been set.
func (o *ReceiveResponse) HasOutputUuid() bool {
	if o != nil && !IsNil(o.OutputUuid) {
		return true
	}

	return false
}

// SetOutputUuid gets a reference to the given string and assigns it to the OutputUuid field.
func (o *ReceiveResponse) SetOutputUuid(v string) {
	o.OutputUuid = &v
}

// GetOutput returns the Output field value
func (o *ReceiveResponse) GetOutput() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Output
}

// GetOutputOk returns a tuple with the Output field value
// and a boolean to check if the value has been set.
func (o *ReceiveResponse) GetOutputOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Output, true
}

// SetOutput sets field value
func (o *ReceiveResponse) SetOutput(v map[string]interface{}) {
	o.Output = v
}

// GetTimestamp returns the Timestamp field value
func (o *ReceiveResponse) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ReceiveResponse) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ReceiveResponse) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetDbResumeToken returns the DbResumeToken field value if set, zero value otherwise.
func (o *ReceiveResponse) GetDbResumeToken() string {
	if o == nil || IsNil(o.DbResumeToken) {
		var ret string
		return ret
	}
	return *o.DbResumeToken
}

// GetDbResumeTokenOk returns a tuple with the DbResumeToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReceiveResponse) GetDbResumeTokenOk() (*string, bool) {
	if o == nil || IsNil(o.DbResumeToken) {
		return nil, false
	}
	return o.DbResumeToken, true
}

// HasDbResumeToken returns a boolean if a field has been set.
func (o *ReceiveResponse) HasDbResumeToken() bool {
	if o != nil && !IsNil(o.DbResumeToken) {
		return true
	}

	return false
}

// SetDbResumeToken gets a reference to the given string and assigns it to the DbResumeToken field.
func (o *ReceiveResponse) SetDbResumeToken(v string) {
	o.DbResumeToken = &v
}

func (o ReceiveResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReceiveResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OutputUuid) {
		toSerialize["outputUuid"] = o.OutputUuid
	}
	toSerialize["output"] = o.Output
	toSerialize["timestamp"] = o.Timestamp
	if !IsNil(o.DbResumeToken) {
		toSerialize["dbResumeToken"] = o.DbResumeToken
	}
	return toSerialize, nil
}

func (o *ReceiveResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"output",
		"timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReceiveResponse := _ReceiveResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReceiveResponse)

	if err != nil {
		return err
	}

	*o = ReceiveResponse(varReceiveResponse)

	return err
}

type NullableReceiveResponse struct {
	value *ReceiveResponse
	isSet bool
}

func (v NullableReceiveResponse) Get() *ReceiveResponse {
	return v.value
}

func (v *NullableReceiveResponse) Set(val *ReceiveResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReceiveResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReceiveResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReceiveResponse(val *ReceiveResponse) *NullableReceiveResponse {
	return &NullableReceiveResponse{value: val, isSet: true}
}

func (v NullableReceiveResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReceiveResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
